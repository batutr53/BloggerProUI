@model BloggerProUI.Models.Auth.RegisterViewModel
@{
    ViewData["Title"] = "Kayıt Ol";
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Q. Studio</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Playfair+Display:ital,wght@0,400;0,600;0,700;1,400&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="~/css/style.css" rel="stylesheet" />
</head>
<body class="auth-body auth-body-register">
    <div class="auth-main-container">
        <div class="auth-brand-panel auth-brand-panel-register">
            <div class="auth-brand-logo">Q. Studio</div>
            <div class="auth-brand-tagline">
                Kendini ifade et, hikayelerini paylaş ve yaratıcı topluluğumuzun bir parçası ol. Ücretsiz hesabınla hemen başla!
            </div>
            <ul class="auth-features-list">
                <li>
                    <i class="fas fa-gift"></i>
                    <span>Tamamen ücretsiz platform</span>
                </li>
                <li>
                    <i class="fas fa-cloud-upload-alt"></i>
                    <span>Sınırsız içerik paylaşımı</span>
                </li>
                <li>
                    <i class="fas fa-heart"></i>
                    <span>Okuyucu etkileşimi ve geri bildirim</span>
                </li>
                <li>
                    <i class="fas fa-shield-alt"></i>
                    <span>Güvenli ve özel profil</span>
                </li>
                <li>
                    <i class="fas fa-users"></i>
                    <span>Aktif yazar topluluğu</span>
                </li>
            </ul>
        </div>
        
        <div class="auth-form-panel">
            <div class="auth-welcome-header">
                <h1 class="auth-welcome-title">Hesap Oluştur</h1>
                <p class="auth-welcome-subtitle">Hemen başlayın ve ilk hikayenizi dünyayla paylaşın</p>
            </div>

            @if (ViewData.ModelState.ErrorCount > 0)
            {
                <div class="auth-validation-summary">
                    <ul>
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="auth-alert auth-alert-danger">
                    <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
                </div>
            }

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="auth-alert auth-alert-success">
                    <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                </div>
            }

            <form asp-action="Register" method="post" class="auth-form-container" id="registerForm">
                <div class="auth-form-group">
                    <label asp-for="Username" class="auth-form-label">Kullanıcı Adı</label>
                    <div class="auth-input-wrapper">
                        <input asp-for="Username" class="auth-form-input" placeholder="Benzersiz kullanıcı adınızı seçin" autocomplete="username" />
                        <i class="fas fa-user auth-input-icon"></i>
                    </div>
                    <span asp-validation-for="Username" class="auth-validation-error"></span>
                </div>

                <div class="auth-form-group">
                    <label asp-for="Email" class="auth-form-label">E-posta Adresi</label>
                    <div class="auth-input-wrapper">
                        <input asp-for="Email" type="email" class="auth-form-input" placeholder="E-posta adresinizi girin" autocomplete="email" />
                        <i class="fas fa-envelope auth-input-icon"></i>
                    </div>
                    <span asp-validation-for="Email" class="auth-validation-error"></span>
                </div>

                <div class="auth-form-group">
                    <label asp-for="Password" class="auth-form-label">Şifre</label>
                    <div class="auth-input-wrapper">
                        <input asp-for="Password" type="password" class="auth-form-input" placeholder="Güçlü bir şifre oluşturun" id="passwordInput" autocomplete="new-password" />
                        <i class="fas fa-lock auth-input-icon"></i>
                    </div>
                    <div class="auth-strength-indicator">
                        <div class="auth-strength-bar" id="strengthBar"></div>
                    </div>
                    <span asp-validation-for="Password" class="auth-validation-error"></span>
                </div>

                <div class="auth-password-requirements">
                    <strong>Şifre gereksinimleri:</strong>
                    <ul>
                        <li>En az 6 karakter uzunluğunda olmalı</li>
                        <li>Büyük ve küçük harf içermeli</li>
                        <li>En az bir sayı içermeli</li>
                        <li>Özel karakter kullanmanız önerilir</li>
                    </ul>
                </div>

                <button type="submit" class="auth-register-btn" id="registerBtn">
                    <i class="fas fa-user-plus"></i> Hesap Oluştur
                </button>
            </form>

            <div class="auth-footer-links">
                <a asp-action="Login">Zaten hesabınız var mı? Giriş yapın</a>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('registerForm').addEventListener('submit', function(e) {
            const btn = document.getElementById('registerBtn');
            btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Hesap oluşturuluyor...';
            btn.disabled = true;
            btn.classList.add('loading');
        });

        // Password strength indicator
        document.getElementById('passwordInput').addEventListener('input', function() {
            const password = this.value;
            const strengthBar = document.getElementById('strengthBar');
            let strength = 0;
            
            if (password.length >= 6) strength++;
            if (password.match(/[a-z]/)) strength++;
            if (password.match(/[A-Z]/)) strength++;
            if (password.match(/[0-9]/)) strength++;
            if (password.match(/[^a-zA-Z0-9]/)) strength++;
            
            strengthBar.className = 'auth-strength-bar';
            
            switch(strength) {
                case 0:
                case 1:
                    strengthBar.classList.add('auth-strength-weak');
                    break;
                case 2:
                case 3:
                    strengthBar.classList.add('auth-strength-fair');
                    break;
                case 4:
                    strengthBar.classList.add('auth-strength-good');
                    break;
                case 5:
                    strengthBar.classList.add('auth-strength-strong');
                    break;
            }
        });

        // Input focus animations
        document.querySelectorAll('.auth-form-input').forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.style.transform = 'scale(1.02)';
            });
            
            input.addEventListener('blur', function() {
                this.parentElement.style.transform = 'scale(1)';
            });
        });

        // Username validation
        document.querySelector('input[name="Username"]').addEventListener('input', function() {
            const username = this.value;
            const validChars = /^[a-zA-Z0-9_-]+$/;
            
            if (username && !validChars.test(username)) {
                this.style.borderColor = '#ef4444';
            } else {
                this.style.borderColor = '#e1e5e9';
            }
        });

        // Email validation
        document.querySelector('input[name="Email"]').addEventListener('input', function() {
            const email = this.value;
            const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
            
            if (email && !emailRegex.test(email)) {
                this.style.borderColor = '#ef4444';
            } else {
                this.style.borderColor = '#e1e5e9';
            }
        });
    </script>

</body>
</html>