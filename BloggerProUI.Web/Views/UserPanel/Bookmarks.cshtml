@model List<BloggerProUI.Models.Bookmark.BookmarkListDto>
@{
    ViewData["Title"] = "Favorilerim";
    ViewData["Description"] = "Kaydettiğim blog yazıları ve favorilerim";
}

<link rel="stylesheet" href="~/css/user-bookmarks.css" asp-append-version="true" />

<div class="user-bookmarks-wrapper">
    <div class="user-bookmarks-header">
        <h1 class="user-bookmarks-title">Favorilerim</h1>
        <p class="user-bookmarks-subtitle">Kaydettiğim blog yazıları ve daha sonra okumak istediğim içerikler</p>
    </div>
    
    @if (Model != null && Model.Any())
    {
        <div class="user-bookmarks-counter">
            <h3 class="user-bookmarks-count-number">@Model.Count</h3>
            <p class="user-bookmarks-count-label">Kayıtlı favori yazı</p>
        </div>
        
        <div class="user-bookmarks-list">
            @foreach (var bookmark in Model)
            {
                <div class="user-bookmark-item">
                    <a href="@Url.Action("Detail", "Blog", new { slug = bookmark.Post.Slug })" style="text-decoration: none; color: inherit;">
                        <img src="@(!string.IsNullOrEmpty(bookmark.Post.FeaturedImage) ? bookmark.Post.FeaturedImage : "https://images.unsplash.com/photo-1494790108755-2616c9a7aaa0?ixlib=rb-4.0.3&auto=format&fit=crop&w=435&q=80")" 
                             alt="@bookmark.Post.Title" class="user-bookmark-thumbnail" loading="lazy">
                    </a>
                    <div class="user-bookmark-details">
                        <div class="user-bookmark-main-info">
                            <div class="user-bookmark-category">
                                @if (bookmark.Post.Categories != null && bookmark.Post.Categories.Any())
                                {
                                    @string.Join(", ", bookmark.Post.Categories).ToUpper()
                                }
                                else
                                {
                                    <text>GENEL</text>
                                }
                                • @bookmark.Post.CreatedAt.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("tr-TR"))
                            </div>
                            <a href="@Url.Action("Detail", "Blog", new { slug = bookmark.Post.Slug })" style="text-decoration: none; color: inherit;">
                                <h3 class="user-bookmark-post-title">@bookmark.Post.Title</h3>
                            </a>
                            <div class="user-bookmark-author">
                                Yazan: @(bookmark.Post.Author?.ToString()?.ToUpper() ?? "BİLİNMEYEN")
                            </div>
                            <p class="user-bookmark-excerpt">
                                @if (!string.IsNullOrEmpty(bookmark.Post.Excerpt))
                                {
                                    @(bookmark.Post.Excerpt.Length > 150 ? bookmark.Post.Excerpt.Substring(0, 150) + "..." : bookmark.Post.Excerpt)
                                }
                                else
                                {
                                    <text>Bu yazının özeti henüz eklenmemiş.</text>
                                }
                            </p>
                            @if (!string.IsNullOrEmpty(bookmark.Notes))
                            {
                                <div class="user-bookmark-personal-notes">
                                    <strong>Notum:</strong> @bookmark.Notes
                                </div>
                            }
                        </div>
                        <div class="user-bookmark-actions">
                            <div class="user-bookmark-saved-date">
                                Kaydedilme: @bookmark.BookmarkedAt.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("tr-TR"))
                            </div>
                            <div class="user-bookmark-controls">
                                <button class="user-bookmark-remove-btn" onclick="removeBookmark('@bookmark.PostId', '@bookmark.Post.Title')">
                                    Kaldır
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="user-bookmarks-empty-state">
            <h3 class="user-bookmarks-empty-title">Henüz favori eklenmemiş</h3>
            <p class="user-bookmarks-empty-description">Sevdiğiniz blog yazılarını favorilerinize ekleyerek daha sonra kolayca erişebilirsiniz.</p>
            <a href="@Url.Action("Index", "Blog")" class="user-bookmarks-explore-btn">
                Blog Yazılarını Keşfet
            </a>
        </div>
    }
</div>

<!-- SweetAlert2 for notifications -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
async function removeBookmark(postId, postTitle) {
    try {
        const result = await Swal.fire({
            title: 'Emin misiniz?',
            text: `"${postTitle}" adlı yazıyı favorilerden kaldırmak istediğinizden emin misiniz?`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#e74c3c',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Evet, Kaldır',
            cancelButtonText: 'İptal'
        });

        if (result.isConfirmed) {
            const response = await fetch(`/Blog/RemoveBookmark/${postId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            if (response.ok) {
                Swal.fire({
                    title: 'Başarılı!',
                    text: 'Yazı favorilerden kaldırıldı.',
                    icon: 'success',
                    timer: 1500,
                    showConfirmButton: false
                }).then(() => {
                    // Refresh the page to update the list
                    location.reload();
                });
            } else {
                Swal.fire({
                    title: 'Hata!',
                    text: 'Yazı favorilerden kaldırılırken bir hata oluştu.',
                    icon: 'error',
                    confirmButtonText: 'Tamam'
                });
            }
        }
    } catch (error) {
        console.error('Remove bookmark error:', error);
        Swal.fire({
            title: 'Hata!',
            text: 'Bir hata oluştu. Lütfen tekrar deneyin.',
            icon: 'error',
            confirmButtonText: 'Tamam'
        });
    }
}
</script>