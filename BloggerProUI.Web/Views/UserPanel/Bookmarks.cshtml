@model List<BloggerProUI.Models.Bookmark.BookmarkListDto>
@{
    ViewData["Title"] = "Favorilerim";
    ViewData["Description"] = "Kaydettiƒüim blog yazƒ±larƒ± ve favorilerim";
}

<style>
    .bookmarks-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }
    
    .bookmarks-header {
        text-align: center;
        margin-bottom: 40px;
    }
    
    .bookmarks-header h1 {
        color: #333;
        margin-bottom: 10px;
    }
    
    .bookmarks-header p {
        color: #666;
        font-size: 16px;
    }
    
    .bookmarks-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
        margin-top: 30px;
    }
    
    .bookmark-card {
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        text-decoration: none;
        color: inherit;
    }
    
    .bookmark-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 16px rgba(0,0,0,0.15);
        text-decoration: none;
        color: inherit;
    }
    
    .bookmark-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }
    
    .bookmark-content {
        padding: 20px;
    }
    
    .bookmark-title {
        font-size: 18px;
        font-weight: 600;
        margin-bottom: 10px;
        color: #333;
        line-height: 1.4;
    }
    
    .bookmark-meta {
        color: #666;
        font-size: 14px;
        margin-bottom: 10px;
    }
    
    .bookmark-excerpt {
        color: #555;
        font-size: 14px;
        line-height: 1.6;
        margin-bottom: 15px;
    }
    
    .bookmark-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-top: 15px;
        border-top: 1px solid #eee;
    }
    
    .bookmark-date {
        color: #999;
        font-size: 12px;
    }
    
    .bookmark-actions {
        display: flex;
        gap: 10px;
    }
    
    .bookmark-remove {
        background: #e74c3c;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 12px;
        transition: background 0.3s ease;
    }
    
    .bookmark-remove:hover {
        background: #c0392b;
    }
    
    .no-bookmarks {
        text-align: center;
        padding: 60px 20px;
        color: #666;
    }
    
    .no-bookmarks h3 {
        margin-bottom: 20px;
        color: #333;
    }
    
    .no-bookmarks p {
        margin-bottom: 30px;
        font-size: 16px;
    }
    
    .browse-posts-btn {
        background: #333;
        color: white;
        padding: 12px 24px;
        border: none;
        border-radius: 4px;
        text-decoration: none;
        display: inline-block;
        transition: background 0.3s ease;
    }
    
    .browse-posts-btn:hover {
        background: #555;
        text-decoration: none;
        color: white;
    }
    
    .stats-info {
        text-align: center;
        margin-bottom: 30px;
        padding: 15px;
        background: #f8f9fa;
        border-radius: 8px;
    }
    
    .stats-info h3 {
        color: #333;
        margin-bottom: 5px;
    }
    
    .stats-info p {
        color: #666;
        margin: 0;
    }
</style>

<div class="bookmarks-container">
    <div class="bookmarks-header">
        <h1>üìö Favorilerim</h1>
        <p>Kaydettiƒüim blog yazƒ±larƒ± ve daha sonra okumak istediƒüim i√ßerikler</p>
    </div>
    
    @if (Model != null && Model.Any())
    {
        <div class="stats-info">
            <h3>@Model.Count</h3>
            <p>Kayƒ±tlƒ± favori yazƒ±</p>
        </div>
        
        <div class="bookmarks-grid">
            @foreach (var bookmark in Model)
            {
                <div class="bookmark-card">
                    <a href="@Url.Action("Detail", "Blog", new { slug = bookmark.Post.Slug })" style="text-decoration: none; color: inherit;">
                        <img src="@(!string.IsNullOrEmpty(bookmark.Post.FeaturedImage) ? bookmark.Post.FeaturedImage : "https://images.unsplash.com/photo-1494790108755-2616c9a7aaa0?ixlib=rb-4.0.3&auto=format&fit=crop&w=435&q=80")" 
                             alt="@bookmark.Post.Title" class="bookmark-image" loading="lazy">
                        <div class="bookmark-content">
                            <h3 class="bookmark-title">@bookmark.Post.Title</h3>
                            <div class="bookmark-meta">
                                @if (bookmark.Post.Categories != null && bookmark.Post.Categories.Any())
                                {
                                    @string.Join(", ", bookmark.Post.Categories)
                                }
                                else
                                {
                                    <text>Genel</text>
                                }
                                ‚Ä¢ @bookmark.Post.CreatedAt.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("tr-TR"))
                            </div>
                            <p class="bookmark-excerpt">
                                @if (!string.IsNullOrEmpty(bookmark.Post.Excerpt))
                                {
                                    @(bookmark.Post.Excerpt.Length > 120 ? bookmark.Post.Excerpt.Substring(0, 120) + "..." : bookmark.Post.Excerpt)
                                }
                                else
                                {
                                    <text>Bu yazƒ±nƒ±n √∂zeti hen√ºz eklenmemi≈ü.</text>
                                }
                            </p>
                            @if (!string.IsNullOrEmpty(bookmark.Notes))
                            {
                                <div class="bookmark-notes" style="background: #f8f9fa; padding: 10px; border-radius: 4px; margin-top: 10px;">
                                    <strong>Notum:</strong> @bookmark.Notes
                                </div>
                            }
                        </div>
                    </a>
                    <div class="bookmark-footer">
                        <div class="bookmark-date">
                            Kaydedilme: @bookmark.BookmarkedAt.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("tr-TR"))
                        </div>
                        <div class="bookmark-actions">
                            <button class="bookmark-remove" onclick="removeBookmark('@bookmark.PostId', '@bookmark.Post.Title')">
                                üóëÔ∏è Kaldƒ±r
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="no-bookmarks">
            <h3>üîñ Hen√ºz favori eklenmemi≈ü</h3>
            <p>Sevdiƒüiniz blog yazƒ±larƒ±nƒ± favorilerinize ekleyerek daha sonra kolayca eri≈üebilirsiniz.</p>
            <a href="@Url.Action("Index", "Blog")" class="browse-posts-btn">
                üìñ Blog Yazƒ±larƒ±nƒ± Ke≈üfet
            </a>
        </div>
    }
</div>

<!-- SweetAlert2 for notifications -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
async function removeBookmark(postId, postTitle) {
    try {
        const result = await Swal.fire({
            title: 'Emin misiniz?',
            text: `"${postTitle}" adlƒ± yazƒ±yƒ± favorilerden kaldƒ±rmak istediƒüinizden emin misiniz?`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#e74c3c',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Evet, Kaldƒ±r',
            cancelButtonText: 'ƒ∞ptal'
        });

        if (result.isConfirmed) {
            const response = await fetch(`/Blog/RemoveBookmark/${postId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            if (response.ok) {
                Swal.fire({
                    title: 'Ba≈üarƒ±lƒ±!',
                    text: 'Yazƒ± favorilerden kaldƒ±rƒ±ldƒ±.',
                    icon: 'success',
                    timer: 1500,
                    showConfirmButton: false
                }).then(() => {
                    // Refresh the page to update the list
                    location.reload();
                });
            } else {
                Swal.fire({
                    title: 'Hata!',
                    text: 'Yazƒ± favorilerden kaldƒ±rƒ±lƒ±rken bir hata olu≈ütu.',
                    icon: 'error',
                    confirmButtonText: 'Tamam'
                });
            }
        }
    } catch (error) {
        console.error('Remove bookmark error:', error);
        Swal.fire({
            title: 'Hata!',
            text: 'Bir hata olu≈ütu. L√ºtfen tekrar deneyin.',
            icon: 'error',
            confirmButtonText: 'Tamam'
        });
    }
}
</script>