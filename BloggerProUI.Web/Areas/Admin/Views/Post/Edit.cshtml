@model BloggerProUI.Models.Post.PostDetailDto
@using Microsoft.AspNetCore.Mvc.Rendering
@{
    ViewData["Title"] = "Post Güncelle";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<!-- SweetAlert2 CDN -->
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- Admin Post Create Styles -->
<link href="~/css/admin-post-create.css" rel="stylesheet" />

<h1 class="h3 mb-4 text-gray-800">Post Güncelle</h1>

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />
    <div class="row">
        <!-- Sol Panel -->
        <div class="col-md-8">
            <div class="form-group">
                <label asp-for="Title">Başlık</label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Slug">Slug</label>
                <input asp-for="Slug" class="form-control" />
                <span asp-validation-for="Slug" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Content">İçerik (Ana)</label>
                <textarea asp-for="Content" id="editor"></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FeaturedImage">Kapak Görseli URL</label>
                <input asp-for="FeaturedImage" class="form-control" />
                <span asp-validation-for="FeaturedImage" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label>Kategoriler</label>
                <select asp-for="Categories" asp-items="ViewBag.Categories" class="form-control" multiple></select>
            </div>

            <div class="form-group">
                <label>Etiketler</label>
                <select asp-for="Tags" asp-items="ViewBag.Tags" class="form-control" multiple></select>
            </div>

            <div class="form-group">
                <label asp-for="Status">Yayın Durumu</label>
                <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<BloggerProUI.Models.Enums.PostStatus>()"></select>
            </div>

            <div class="form-group">
                <label asp-for="Visibility">Görünürlük</label>
                <select asp-for="Visibility" class="form-control" asp-items="Html.GetEnumSelectList<BloggerProUI.Models.Enums.PostVisibility>()"></select>
            </div>

            <div class="form-group">
                <label asp-for="PublishDate">Yayın Tarihi</label>
                <input asp-for="PublishDate" type="datetime-local" class="form-control" />
                <span asp-validation-for="PublishDate" class="text-danger"></span>
            </div>

            <div class="form-check">
                <input asp-for="AllowComments" class="form-check-input" />
                <label asp-for="AllowComments" class="form-check-label">Yorumlara izin ver</label>
            </div>

            <div class="form-check mb-3">
                <input asp-for="IsFeatured" class="form-check-input" />
                <label asp-for="IsFeatured" class="form-check-label">Öne çıkar</label>
            </div>
        </div>

        <!-- Sağ Panel -->
        <div class="col-md-4">
            <h5 class="mb-3">İstatistik</h5>
            <ul class="list-group mb-3">
                <li class="list-group-item">Görüntülenme: <strong>@Model.ViewCount</strong></li>
                <li class="list-group-item">Yorumlar: <strong>@Model.CommentCount</strong></li>
                <li class="list-group-item">Beğeni: <strong>@Model.LikeCount</strong></li>
                <li class="list-group-item">Ortalama Puan: <strong>@(Model.AverageRating?.ToString("0.0") ?? "Yok")</strong></li>
            </ul>

            <h5 class="mt-4">Yazar</h5>
            <div class="d-flex align-items-center">
                <img src="@Model.AuthorAvatar" alt="avatar" class="rounded-circle mr-2" width="50" />
                <strong class="ml-2">@Model.AuthorName</strong>
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-success mt-4">Güncelle</button>
    <a asp-action="Index" class="btn btn-secondary mt-4">İptal</a>
</form>
@section Scripts {
    <script src="https://cdn.ckeditor.com/ckeditor5/35.3.2/classic/ckeditor.js"></script>
    <script>
        class MyUploadAdapter {
            constructor(loader) {
                this.loader = loader;
            }

            upload() {
                return this.loader.file
                    .then(file => new Promise((resolve, reject) => {
                        const data = new FormData();
                        data.append('upload', file);

                        fetch('/Admin/Image/Upload', {
                            method: 'POST',
                            body: data
                        })
                        .then(response => {
                            if (!response.ok) {
                                reject(`HTTP error! status: ${response.status}`);
                            }
                            return response.json();
                        })
                        .then(result => {
                            if (result.uploaded) {
                                resolve({
                                    default: result.url
                                });
                            } else {
                                reject(result.error.message);
                            }
                        })
                        .catch(error => {
                            reject(error);
                        });
                    }));
            }

            abort() {
                // Abort logic if needed
            }
        }

        function MyCustomUploadAdapterPlugin(editor) {
            editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {
                return new MyUploadAdapter(loader);
            };
        }

        ClassicEditor
            .create(document.querySelector('#editor'), {
                extraPlugins: [MyCustomUploadAdapterPlugin],
                toolbar: {
                    items: [
                        'heading', '|',
                        'bold', 'italic', '|',
                        'link', 'uploadImage', 'mediaEmbed', '|',
                        'alignment', '|',
                        'undo', 'redo'
                    ]
                },
                image: {
                    toolbar: [
                        'imageStyle:inline',
                        'imageStyle:block',
                        'imageStyle:side',
                        '|',
                        'toggleImageCaption',
                        'imageTextAlternative'
                    ]
                }
            })
            .catch(error => {
                console.error(error);
            });

        function generateSlug(title) {
            return title.toString().toLowerCase()
                .replace(/\s+/g, '-')           // Replace spaces with -
                .replace(/[^\w\-]+/g, '')       // Remove all non-word chars
                .replace(/\-\-+/g, '-')         // Replace multiple - with single -
                .replace(/^-+/, '')             // Trim - from start of text
                .replace(/-+$/, '');            // Trim - from end of text
        }

        $('#Title').on('input', function() {
            var title = $(this).val();
            var slug = generateSlug(title);
            $('#Slug').val(slug);
        });
    </script>
}
